# This file is part of the dune-stuff-demos project:
#   http://users.dune-project.org/projects/dune-stuff-demos
# Copyright holders: Rene Milk, Felix Schindler
# License: BSD 2-Clause License (http://opensource.org/licenses/BSD-2-Clause)

dune-stuff-demos is a git supermodule which serves as a demonstration module
for dune-stuff (http://users.dune-project.org/projects/dune-stuff). This module
provides the correct versions of all relevant DUNE
(http://www.dune-project.org) modules and external libraries as git
submodules. It also provides a git submodule located in local/bin which
containes some helper scripts to download and build the demos.

To get started, clone this repository and initialize the submodules, i.e.:

    git clone http://users.dune-project.org/repositories/projects/dune-stuff-demos.git
    cd dune-stuff-demos
    git submodule update --init

You can now check if one of the config.opts.?? files is named after a compiler
that is available on your system. If not, copy an existing file and edit it
accordingly (mainly CC, CXX and F77), i.e.:

    cp config.opts.gcc config.opts.mycppcompiler

Please note that DUNE in general is known to work best with gcc. dune-stuff
is tested to work with gcc-4.8 and clang-3.4. You can now set the CC
environment variable to match your compiler and generate a PATH.sh file, i.e.:

    CC=clang ./local/bin/gen_path.py
    source PATH.sh

It is convenient to source this PATH.sh file from now on whenever you want to
work on dune-stuff, since many of the provided scripts require the CC variable
to be set correctly. If there are several config.opts files for one compiler
you can explicitely choose one, as shown in the following sample setup where
we use the clang compiler with a debug build (default) for dune and a release
build for the external libraries:

    ./local/bin/download_external_libraries.py
    CC=clang-release ./local/bin/build_external_libraries.py
    ./setup.sh config.opts.clang
